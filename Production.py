productions = {
    0: ["PROGRAM", "Â¡init identifier ; BODY !end"],
    1: ["BODY", "MAIN"],
    2: ["BODY", "DECLARE MAIN"],
    3: ["DECLARE", "var IDENTIFIER : TYPES ;"],
    4: ["IDENTIFIERS", "identifier ; IDENTIFIERS"],
    5: ["IDENTIFIERS", "identifier ;"],
    6: ["TYPES", "DEFAULT"],
    7: ["DEFAULT", "integer"],
    8: ["DEFAULT", "decimal"],
    9: ["DEFAULT", "char"],
    10: ["DEFAULT", "string"],
    11: ["DEFAULT", "bool"],
    12: ["MAIN", "{ STATEMENT }"],
    13: ["EXPRESION", "EXP"],
    14: ["EXPRESION", "EXP REL EXP"],
    15: ["EXP", "TERM"], 
    16: ["EXP", "TERM + EXP"],
    17: ["EXP", "TERM - EXP"],
    18: ["EXP", "TERM || EXP"],
    19: ["REL", "=="],
    20: ["REL", ">"],
    21: ["REL", "<"],
    22: ["REL", "<="],
    23: ["REL", ">="],
    24: ["REL", "!="],
    25: ["ASIGN", "identifier = EXPRESSION"],
    26: ["TERM", "FACTOR * TERM"],
    27: ["TERM", "FACTOR / TERM"],
    28: ["TERM", "FACTOR && TERM"],
    29: ["TERM", "FACTOR"],
    30: ["FACTOR", "identifier"],
    31: ["FACTOR", "number"],
    32: ["FACTOR", "true"],
    33: ["FACTOR", "string"],
    34: ["FACTOR", "{ EXPRESION }"],
    35: ["STATEMENTS", "STATEMENT ;"],
    36: ["STATEMENTS", "STATEMENT ; STATEMENTS"],
    37: ["STATEMENT", "ASIGN"],
    38: ["STATEMENT", "IF"],
    39: ["STATEMENT", "WHILE"],
    40: ["STATEMENT", "FOR"],
    41: ["STATEMENT", "INPUT"],
    42: ["STATEMENT", "OUTPUT"],
    43: ["FOR", "for COUNTER do { STATEMENT }"],
    44: ["COUNTER", "id := EXPRESSION for EXPRESSION"],
    45: ["WHILE", "while EXPRESSION do { STATEMENT }"],
    46: ["INPUT", "read ( Rel )"],
    47: ["OUTPUT", "write ( Rel )"],
    48: ["IF", "if EXPRESION then { STATEMENTS } Ril endif"],
    49: ["Ril", "else { STATEMENTS }"],
    50: ["Ril", ""]
}
